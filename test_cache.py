"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ ReplayDataCache
"""
import os
import django

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'lesta_replays.settings')
django.setup()

from replays.models import Replay
from replays.parser.replay_cache import ReplayDataCache

def test_replay_cache():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç ReplayDataCache –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Ä–µ–ø–ª–µ–µ"""

    # –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π —Ä–µ–ø–ª–µ–π –∏–∑ –ë–î
    replay = Replay.objects.first()

    if not replay:
        print("‚ùå –í –ë–î –Ω–µ—Ç —Ä–µ–ø–ª–µ–µ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return

    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ä–µ–ø–ª–µ–π ID={replay.id}")

    try:
        # –°–æ–∑–¥–∞—ë–º –∫–µ—à
        cache = ReplayDataCache(replay.payload)
        print(f"‚úÖ –ö–µ—à —Å–æ–∑–¥–∞–Ω: {cache}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
        print(f"\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–π—Å—Ç–≤ –∫–µ—à–∞:")
        print(f"  - player_id: {cache.player_id}")
        print(f"  - player_team: {cache.player_team}")
        print(f"  - –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π: {len(cache.get_achievements())}")
        print(f"  - common –¥–∞–Ω–Ω—ã–µ: {len(cache.common)} –ø–æ–ª–µ–π")
        print(f"  - personal –¥–∞–Ω–Ω—ã–µ: {len(cache.personal)} –ø–æ–ª–µ–π")
        print(f"  - players: {len(cache.players)} –∏–≥—Ä–æ–∫–æ–≤")
        print(f"  - vehicles: {len(cache.vehicles)} –∑–∞–ø–∏—Å–µ–π")
        print(f"  - avatars: {len(cache.avatars)} –∞–≤–∞—Ç–∞—Ä–æ–≤")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –¥–æ—Å—Ç—É–ø (–¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å –∑–∞–∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ)
        personal1 = cache.personal
        personal2 = cache.personal

        if personal1 is personal2:
            print(f"\n‚úÖ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç! (personal1 is personal2)")
        else:
            print(f"\n‚ùå –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç!")

        print(f"\n‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã!")

    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–µ—à–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    test_replay_cache()
