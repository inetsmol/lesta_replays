#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–µ—Ç–∞–ª–µ–π —Ä–µ–ø–ª–µ—è.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python scripts/profile_replay_detail.py <replay_id>

–ü—Ä–∏–º–µ—Ä:
    python scripts/profile_replay_detail.py 1
"""

import os
import sys
import django
import cProfile
import pstats
import io
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Django
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'lesta_replays.settings')
django.setup()

from django.test import RequestFactory
from replays.views import ReplayDetailView
from replays.models import Replay


def profile_replay_detail(replay_id: int, runs: int = 3):
    """
    –ü—Ä–æ—Ñ–∏–ª–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–µ—Ç–∞–ª–µ–π —Ä–µ–ø–ª–µ—è.

    Args:
        replay_id: ID —Ä–µ–ø–ª–µ—è –¥–ª—è –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        runs: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—É—Å–∫–æ–≤ –¥–ª—è —É—Å—Ä–µ–¥–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    """
    try:
        replay = Replay.objects.select_related('tank', 'owner', 'user', 'map').get(pk=replay_id)
    except Replay.DoesNotExist:
        print(f"‚ùå –†–µ–ø–ª–µ–π —Å ID {replay_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    print(f"üìä –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–ª–µ—è ID={replay_id}")
    print(f"   –¢–∞–Ω–∫: {replay.tank.name if replay.tank else 'N/A'}")
    print(f"   –ò–≥—Ä–æ–∫: {replay.owner.real_name if replay.owner else 'N/A'}")
    print(f"   –î–∞—Ç–∞ –±–æ—è: {replay.battle_date}")
    print(f"   –ó–∞–ø—É—Å–∫–æ–≤: {runs}\n")

    factory = RequestFactory()

    # –ü—Ä–æ—Ñ–∏–ª–∏—Ä—É–µ–º get_context_data
    pr = cProfile.Profile()

    for i in range(runs):
        request = factory.get(f'/replays/{replay_id}/')
        view = ReplayDetailView()
        view.request = request
        view.object = replay

        pr.enable()
        try:
            context = view.get_context_data()
        except Exception as e:
            pr.disable()
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
            return
        pr.disable()

    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    s = io.StringIO()
    ps = pstats.Stats(pr, stream=s)
    ps.strip_dirs()
    ps.sort_stats('cumulative')

    print("=" * 80)
    print("üìà –¢–û–ü-30 –§–£–ù–ö–¶–ò–ô –ü–û CUMULATIVE TIME")
    print("=" * 80)
    ps.print_stats(30)
    print(s.getvalue())

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
    s = io.StringIO()
    ps = pstats.Stats(pr, stream=s)
    ps.strip_dirs()
    ps.sort_stats('time')

    print("\n" + "=" * 80)
    print("üìà –¢–û–ü-30 –§–£–ù–ö–¶–ò–ô –ü–û TOTAL TIME")
    print("=" * 80)
    ps.print_stats(30)
    print(s.getvalue())

    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –≤—ã–∑–æ–≤–æ–≤
    s = io.StringIO()
    ps = pstats.Stats(pr, stream=s)
    ps.strip_dirs()
    ps.sort_stats('calls')

    print("\n" + "=" * 80)
    print("üìà –¢–û–ü-20 –§–£–ù–ö–¶–ò–ô –ü–û –ö–û–õ–ò–ß–ï–°–¢–í–£ –í–´–ó–û–í–û–í")
    print("=" * 80)
    ps.print_stats(20)
    print(s.getvalue())

    print("\n" + "=" * 80)
    print("‚úÖ –ü—Ä–æ—Ñ–∏–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ")
    print("=" * 80)


if __name__ == '__main__':
    if len(sys.argv) < 2:
        print("‚ùå –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python scripts/profile_replay_detail.py <replay_id>")
        print("   –ü—Ä–∏–º–µ—Ä: python scripts/profile_replay_detail.py 1")
        sys.exit(1)

    try:
        replay_id = int(sys.argv[1])
    except ValueError:
        print(f"‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID —Ä–µ–ø–ª–µ—è: {sys.argv[1]}")
        sys.exit(1)

    runs = 3
    if len(sys.argv) >= 3:
        try:
            runs = int(sys.argv[2])
        except ValueError:
            print(f"‚ö†Ô∏è  –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—É—Å–∫–æ–≤: {sys.argv[2]}, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 3")

    profile_replay_detail(replay_id, runs)
